@page "/login"
@using Blazored.LocalStorage
@using Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<PageTitle>Login</PageTitle>

<div class="flex flex-col justify-center items-center text-center min-h-screen">
    @* <h1 style="color: #e6ddcb;">Login</h1> *@
    <div class="login-inputs-container gap-3 m-5">
        <input type="text" placeholder="Username or Email" class="login-input text-center px-4 py-2 rounded-pill"
               @bind="_loginRequest.EmailOrUsername">
        <input type="password" placeholder="Password" class="login-input password-input text-center px-4 py-2 rounded-pill"
               @bind="_loginRequest.Password">
    </div>
    <div class="login-buttons-container">
        <button class="login-button text-center px-4 py-2 rounded-pill" @onclick="HandleLogin">Login</button>
        <button class="create-account-button text-center px-4 py-2 rounded-pill" @onclick="NavigateToRegister">Create An Account</button>
    </div>
    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <p class="text-red-500">@_errorMessage</p> <!-- Display error messages -->
    }
</div>

@code {
    private LoginRequest _loginRequest = new();
    private string? _errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", _loginRequest);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<TokenResponse>();
                if (result != null)
                {
                    // Store JWT locally
                    await LocalStorage.SetItemAsync("authToken", result.Token);
                    Navigation.NavigateTo("/Home");
                }
            }
            else
            {
                _errorMessage = "invalid login credentials";
            }
        }
        catch (Exception e)
        {
            _errorMessage = "An error occurred. Please try again.";
        }
    }
    
    private void NavigateToRegister()
    {
        Navigation.NavigateTo("/Register");
    }
}