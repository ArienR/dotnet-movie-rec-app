@page "/home"
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>Home</PageTitle>

<div class="flex flex-col justify-center items-center text-center min-h-screen">
    <div class="home-typewriter-wrapper">
        <h1 id="home-typewriter">
            <Typewriter Texts="_welcomeTexts" TypingSpeed="75" BackSpeed="35" PauseBetween="500"/>
        </h1>
    </div>

    <input type="text" placeholder="Your Letterboxd username..." class="main-input text-center px-4 py-2 rounded-pill">
    
    @if (!_isLoggedIn)
    {
        <div class="login-buttons-container mt-4 flex-row">
            <button type="button" class="login-button text-center px-4 py-2 rounded-pill" @onclick="NavigateToLogin">Login</button>
            <button type="button" class="login-button text-center px-4 py-2 rounded-pill" @onclick="NavigateToRegister">Register</button>
        </div>
    }

    <div class="welcome-wrapper mt-5">
        @if (_showWelcome)
        {
            <p class="welcome-message @(_fadeOutWelcome? "fade-out":"")">
                @_welcomeMessage
            </p>
        }
    </div>
</div>


@code {
    private readonly string[] _welcomeTexts = new[] { "Enter your Letterboxd username...", "Then flickpick." };
    private bool _showWelcome = false;
    private string? _welcomeMessage = "";
    private bool _fadeOutWelcome = false;
    private bool _isLoggedIn;
    
    protected override async Task OnParametersSetAsync()
    {
        var token = await LocalStorage.GetItemAsync<string>("authToken");
        _isLoggedIn = !string.IsNullOrWhiteSpace(token);
        
        _ = DisplayWelcomeMessage();
    }
    
    private async Task DisplayWelcomeMessage()
    {
        var uri   = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("message", out var msg))
        {
            if (msg == "WelcomeUser" && query.TryGetValue("user", out var user))
                _welcomeMessage = $"Login Successful. Welcome, {user}.";
            else if (msg == "LoggedOut")
                _welcomeMessage = "You’ve been logged out.";
            else
                return;

            _showWelcome = true;
            StateHasChanged();
            
            await Task.Delay(5000);
            _fadeOutWelcome = true;
            StateHasChanged();
            
            await Task.Delay(1000);
            _showWelcome = false;
            _fadeOutWelcome = false;
            StateHasChanged();
        }
    }
    
    private void NavigateToRegister() =>
        Navigation.NavigateTo("/register");

    private void NavigateToLogin() =>
        Navigation.NavigateTo("/login");

}